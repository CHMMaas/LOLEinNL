*------------------------------------------------------------------------------*
* This scripts fits the flexible parametric survival model and makes loss in --*
* life expectancy (LOLE) predictions ------------------------------------------*
*------------------------------------------------------------------------------*

*-------------------------------*
*** Install relevant packages ***
*-------------------------------*

* tell Stata to never pause
set more off, perm  
* style of decimal point is a comma
// set dp comma, perm

/* install library if not in directory */
// ssc install stpm2, all replace    // log cumulative hazard calculation

capture program drop LOLE_analysis
program LOLE_analysis
args years_cond bool_CI bool_stage df_spline_year df_spline_age df_baseline df_TD max_CBS_age ///
		max_fupdat strs_path results_data_path path_ado_files disease ///
		age1 age2 age3 age4 min_age max_age year1 year2 year3 year4 start_year end_year max_since_years multiple
capture drop *
display "Estimate LOLE"

/* Load data set to train flexible parametric survival model on 
   hematologie_10.dta is generated by 'Prepare hematology data.dta' */
use "`results_data_path'\\`disease'_year`df_spline_year'_age`df_spline_age'_`bool_stage'.dta", clear

/* Exclude patients with unknown stage */
if ("`bool_stage'" == "with_stage"){
    quietly keep if stage4 == 0 
	drop stage4
}

/* Fit the flexible parametric survival model*/
quietly cd "`strs_path'"
if (`df_TD' == 0 & "`bool_stage'" == "without_stage"){
    stpm2 syr* fem* sag*, scale(hazard) df(`df_baseline') bhazard(rate) 
}
else if (`df_TD' == 0 & "`bool_stage'" == "with_stage"){
    stpm2 syr* fem* sag* stage*, scale(hazard) df(`df_baseline') bhazard(rate)
}
else if (`df_TD' > 0 & "`bool_stage'" == "without_stage"){
    stpm2 syr* fem* sag*, scale(hazard) df(`df_baseline') bhazard(rate) tvc(syr* fem* sag*) dftvc(`df_TD')
}
else if (`df_TD' > 0 & "`bool_stage'" == "with_stage"){
    stpm2 syr* fem* sag* stage*, scale(hazard) df(`df_baseline') bhazard(rate) tvc(syr* fem* sag* stage*) dftvc(`df_TD')
}

/* Predict LOLE for the cohort
   tinf(#) specifies the end year used for the numerical integration.
            Both observed and expected survival is assumed to be 0 after this
            point. Default is 50. This needs to be larger if extrapolating
            for very young patients. */
use "`results_data_path'\\`disease'_patients_to_predict_`bool_stage'.dta", clear
local tinf_val = 100 - `min_age'
if ("`bool_CI'" == "no"){
	predict ll, lifelost mergeby(_jaar geslacht _lft) attage(_lft) attyear(_jaar) diagage(age) diagyear(jaar) nodes(40) tinf(`tinf_val') ///
	using(nedmort - LOLE) stub(surv) survprob(p) maxage(`max_CBS_age') maxyear(`max_fupdat') tcond(`years_cond')
}
if ("`bool_CI'" == "yes"){
    display "PREDICT WITH CONFIDENCE INTERVAL"
	predict ll, lifelost mergeby(_jaar geslacht _lft) attage(_lft) attyear(_jaar) diagage(age) diagyear(jaar) nodes(40) tinf(`tinf_val') ///
	using(nedmort - LOLE) stub(surv) survprob(p) maxage(`max_CBS_age') maxyear(`max_fupdat') tcond(`years_cond') ci

	lab var survobs_lci "95% CI lower"
	lab var survobs_uci "upper bound"
}

/* Set labels */
lab var survexp "General population"
lab var survobs "`disease' patients"
lab var ll "Loss of life expectancy"
quietly gen PLOLE = ll/survexp
if ("`bool_CI'" == "yes"){
	local string_CI = "with_CI"
}
else if ("`bool_CI'" == "no"){
	local string_CI = "without_CI"
}

/* Save results */
if ("`multiple'" == "multiple"){
	gen survexp_`years_cond' = survexp
	gen survobs_`years_cond' = survobs
	gen ll_`years_cond' = ll
	
	if ("`bool_CI'" == "yes"){
		gen survobs_lci_`years_cond' = survobs_lci
		gen survobs_uci_`years_cond' = survobs_uci
		gen ll_lci_`years_cond' = ll_lci
		gen ll_uci_`years_cond' = ll_uci
		keep survexp_`years_cond' survobs_`years_cond' survobs_lci_`years_cond' ///
			survobs_uci_`years_cond' ll_`years_cond' ll_lci_`years_cond' ll_uci_`years_cond'
	}
	else{
		gen PLOLE_`years_cond' = PLOLE
		keep survexp_`years_cond' survobs_`years_cond' ll_`years_cond' PLOLE_`years_cond'
	}
	
	quietly merge 1:1 _n using "`results_data_path'\\results_`disease'_CLOLE_multiple_`string_CI'_`bool_stage'.dta"
	drop _merge
	quietly save "`results_data_path'\\results_`disease'_CLOLE_multiple_`string_CI'_`bool_stage'.dta", replace
}
else{
	if (`years_cond' == 0){
		local string_cond = "LOLE"
	}
	else if (`years_cond' > 0){
		local string_cond = "CLOLE"
	}
	quietly save "`results_data_path'\results_`disease'_`string_cond'_`string_CI'_`bool_stage'.dta", replace
}

end